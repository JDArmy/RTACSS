{
  "maintainer": "维护者",
  "collaborators": "贡献者",
  "background": "背景",
  "changelog": "更新日志",
  "license": "开源许可证",
  "introduction": "介绍",
  "backgroundDesc": "很多年前，企业通常仅靠采用“渗透测试”挖掘单个应用系统漏洞的方式来评估自身安全。为了评估漏洞的危害性，美国国家基础设施顾问委员会（NIAC）开发了一套通用漏洞评估系统CVSS，并交由事件响应和安全团队论坛（FIRST）进行托管。FIRST在前序版本基础上，又继续迭代了v2和v3版本，针对单个漏洞的危害性评估标准越来越精确和完善，也被各大安全组织和漏洞收录平台所使用。随着网络安全的发展，面临的网络威胁与日俱增，通过模拟黑客APT攻击手段与行为，对企业开展综合性安全评估的红蓝对抗实战演习方式开始被广泛采用。有些组织单位为了对攻击方之间以及防守方之间进行评估，也制定了一些评分制度。但这种评分制度只能衡量攻击方与攻击方之间，防守方与防守方之间的差异，科学性也有待商榷，也无法做攻击方与防守方间的能力对比。而在仅有一支攻击队伍和一支防守队伍的情况下，问题则更加突出：如果核心系统被突破，那么是说明攻击队伍强，还是说明防守队伍弱呢？如果核心系统没有被突破，那么是攻击队伍弱，还是防守队伍强呢？这是非常难衡量的，业内也没有一套成熟的体系来进行评价。因此JD.Army结合多年网络实战攻防演习以及红蓝对抗经验，参考CVSS以及OWASP风险评级方法，开发了这套针对实战演习场景下的红蓝对抗评分框架。",
  "categoryIntro": "`RTASS评分框架整体上由“${RTASS.factorCategories.CF.name}”与“${RTASS.factorCategories.BF.name}”两大类别构成。`",
  "categoryDesc": "`由${RTASS.factorCategories.CF.processScores.map(ps=>RTASS.processScores[ps].name).join(', ')}等过程因子及分值组成。`",
  "methods": "方法",
  "methodsDesc": "`为什么一定是“关键路径”和“最高”、“最低”、“最大”、“最关键”呢？\n\n这是因为在单场次红蓝对抗当中，攻击者能够采取不同的战略形成不同的攻击路径，并在攻击路径中使用数十、上百种不同的TTPs。如果依次针对这些TTPs进行衡量，很明显是不现实的，也大幅增加了评估的工作量。\n\n安全遵循“短板原理”，同样也遵循“长板原理” —— 攻击者不需要保证每一次TTPs的投入都是最高的技术能力，只要在关键路径上有一次或几次的高水平攻击，就有可能把企业目标拿下。所以我们以攻击者在进攻关键路径上投入的最高水平作为他们的进攻实力的表现。\n\n显然，我们也能看出：攻击者实力并不能代表攻击者在单次红蓝对抗演练中的总的有效技术投入。我们拿物理学做个比喻：一个人在一个物体上施加的最大力，并不能代表这个人在物体上做的有效功。所以，为了衡量攻击者的“功”，我们引入“进攻能量”概念，用以表示攻击者在单次红蓝对抗演习中的总有效投入，也即攻击者在本次演练中投入的技术水平。\n\nRTASS通过评估因子形成${Object.keys(RTASS.processScores).length}个过程分值，过程分值再通过不同组合，形成针对攻击方、防守方、业务以及企业等不同角色的四项最终分值：${Object.values(RTASS.finalScores).map(fs=>fs.name).join('、')}。这${Object.keys(RTASS.finalScores).length}项分值均指代在单次演练中的情况，因此在不同的演练中，分值可能会有所不同。下面将对评分的方法和因子进行详细介绍。`",
  "finalScoresDesc": "fs.name+'['+fsKey+']由'+Object.keys(fs.vectors).map(f=>RTASS.processScores[f].name+'['+f+']').join('、')+'等'+Object.keys(fs.vectors).length+'个过程分值计算得出，'+fs.description",
  "finalScoresPS": "当然，上述关联也有可能随着RTASS的进化有所改变。",
  "scoringDesc": "在本评分框架中，每个评分因子都有0到4共5个评分项。而过程分值和最终分值：最低分0分，最高分为10分。其中，各分值对应等级的分布如下：",
  "scoringDescHeader": "| 分值           | 等级 |",
  "scoringDescPS": "注：本框架部分评分因子如“漏洞风险”、“企业影响”等参考借鉴了OWASP风险评级方法中相关因子。",
  "scoreFactor": "评分因子",
  "scoreAbility": "能力因素",
  "scoreAbilityDesc": "为了能够对评分因子进行更细化的衡量，RTASS在Base版本基础上研发了Plus版本，给评分因子增加了更细化的“能力因素”。有了能力因素后，RTASS在可以对攻击方、防守方、业务方与企业进行宏观评价外，还可以更细致地指示出它们的能力点强弱，以及需要进一步提升的方向。截止目前，如下评分因子具有能力选项：",
  "processScoreDesc": "fc.name+'由'+fc.processScores.map(ps=>RTASS.processScores[ps].name).join('、')+fc.processScores.length+'部分组成。'",
  "processScoringDesc": "RTASS.processScores[ps].name+'由'+Object.keys(psVectors).map(f=>RTASS.factors[f].name+'['+f+']').join('、')+Object.keys(psVectors).length+'个因子计算得出。'+'计算方法为：'",
  "factorDesc": "f.name+'主要评估'+f.description",
  "factorScoreDesc": "f.name + '由'+ Object.keys(f.vectors).map(aKey=>RTASS.abilities[aKey].name+'['+aKey+']').join('、')+' '+ Object.keys(f.vectors).length + '个能力项组成。计算方法为：'",
  "abilityDesc": "a.name+'主要评估'+a.description",
  "vectorString": "向量字符串",
  "vectorStringDesc": "参考CVSS评分框架，RTASS同样使用“向量字符串”来记录评分过程，以及对RTASS指标信息进行传输。RTASS向量字符串以标签“RTASS:”和当前版本的数字表示（譬如：1.0.0）开头。指标信息以一组指标的形式出现，每个指标前面都有一个正斜杠“/”，作为分隔符。每个指标都是缩写形式的指标名称、冒号及指标值构成。缩写形式在本规范的前面定义（在每个因子名称后面的括号中），并在下表中进行了总结。",
  "factor": "因子",
  "ability": "能力",
  "vectorStringDescFactorHeader": "| 因子名称          | 可能的值 |",
  "vectorStringDescAbilityHeader": "| 能力名称          | 可能的值 |",
  "vectorStringDescPS": "注：在RTASS Base评分模式下，能力因素不是必须的；在RTASS Plus评分模式下，能力因素是必须的。",
  "vectorStringExample": "模式向量字符串示例如下：",
  "vectorStringExamplePS": "向量字符串应包含表中所示全部指标，接受任何顺序的度量。如果向量字符串多次包含相同度量，则以最后一次度量为准。",
  "oneThingAbout": "关于RTASS的一句话",
  "ontThingAboutDesc": "RTASS框架在设计上通过各基本因子计算生成过程分值，再通过过程分值生成最终分值。算法为未来的扩展预留了空间，但在现阶段数据还不太充足的情况下，因子的系数基本还是为1。\n\nCVSS在解决此问题上，采取的方式是通过CVSS特别兴趣小组(SIG)人工构建了一套真实漏洞对应严重性的查找表，再反过来调整参数。最终保证人工评估漏洞分值与CVSS框架评估分值的偏差值小于0.5.\n\n由于红蓝对抗演练与漏洞的不同，目前无法通过大量现成的样本来调整参数。但我们会不断收集新样本，通过人工评定以及参考更新的方法论，来使得RTASS的分值更加精确。这也需要阅读本规范的您的多加参与和大力支持。",
  "collaborateAndContribute": "协作 & 贡献",
  "collaborateAndContributeDesc": "本框架采用JSON格式进行了系统描述，详见“/src/RTASS.json”文件，其中：\n\n- 能力评分放于“abilities”对象中，包括每个因子的0到4的中英文分值描述。\n- 评分因子放于“factors”对象中，包括每个因子的0到4的中英文分值描述。\n- 过程分值通过“processScores”进行描述，其中“algorithm”为评分算法。\n- 最终得分通过“finalScores”进行描述，其中“algorithm”为评分算法。\n- “levels”对象存储分值与极、高、中、低之前的对应关系。\n- “factorGroups”对象存储攻防因素和业务因素两大分组与过程分值的对应关系。\n\n各协作者可以通过修改RTASS.json文件对各评分因子的描述以及评分算法来与我们进行该系统框架的协作开发。",
  "thanks": "致谢",
  "reference": "参考链接",
  "onlineCalculator": "在线计算器"
}